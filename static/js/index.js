(()=>{"use strict";class t{constructor(){}static main(){t.createContainerDiv(),t.loadStyle("/static/css/index.css"),t.loadChoiceDiv(),t.createAndHideSimulationControlsDiv(),t.createErrorDiv()}static getResourcesPaths(t){return{favicon:`${t}/res/images/favicon.ico`,envStyle:`${t}/dist/style.css`,envScript:`${t}/dist/main.js`}}static loadFavicon(t){if(null==t)throw new Error("The favicon path is null or undefined.");if("string"!=typeof t)throw new Error("The favicon path is not a string.");if(0===t.length)throw new Error("The favicon path is empty.");if(-1===t.indexOf(".ico"))throw new Error("The favicon path does not contain a .ico file.");{let e=document.createElement("link");e.href=t,e.rel="icon",e.type="image/x-icon",document.head.appendChild(e)}}static createContainerDiv(){if(null!==document.getElementById("container_div"))throw new Error("The container div already exists.");{let t=document.createElement("div");t.id="container_div",document.body.appendChild(t)}}static createErrorDiv(){if(null!==document.getElementById("error_div"))throw new Error("The error div already exists.");{let t=document.createElement("div");t.id="error_div",t.classList.add("center-aligned"),t.hidden=!0,document.body.appendChild(t)}}static loadStyle(t){if(null==t)throw new Error("The style path is null or undefined.");if("string"!=typeof t)throw new Error("The style path is not a string.");if(0===t.length)throw new Error("The style path is empty.");if(-1===t.indexOf(".css"))throw new Error("The style path does not contain a .css file.");{let e=document.createElement("link");e.href=t,e.rel="stylesheet",e.type="text/css",document.head.appendChild(e)}}static loadScript(t,e){if(null==t)throw new Error("The script path is null or undefined.");if("string"!=typeof t)throw new Error("The script path is not a string.");if(0===t.length)throw new Error("The script path is empty.");if(-1===t.indexOf(".js"))throw new Error("The script path does not contain a .js file.");{let n=document.createElement("script");n.src=t,n.type="text/javascript",n.async=!1,n.defer=void 0!==e&&null!=e&&e,document.body.appendChild(n)}}static loadChoiceDiv(){let e=document.createElement("div");e.id="choice_div",e.classList.add("center-aligned"),document.body.appendChild(e),t.loadChoices()}static loadChoices(){t.getChoicesPaths().forEach((e=>t.addEntryToChoiceDiv(e)))}static getChoicesPaths(){return["/envs/vacuumworld-ts","/envs/example-env-ts"]}static addEntryToChoiceDiv(e){if(null==e)throw new Error("The choice path is null or undefined.");if("string"!=typeof e)throw new Error("The choice path is not a string.");if(0===e.length)throw new Error("The choice path is empty.");const n=e+"/res/images/choice.png";let o=document.getElementById("choice_div"),i=document.createElement("img");i.src=n,i.classList.add("choice"),o.appendChild(i),i.addEventListener("click",(()=>{document.querySelectorAll(".choice").forEach((t=>o.removeChild(t))),o.hidden=!0,t.loadEnvironmentDiv(e)}))}static loadEnvironmentDiv(e){const n=t.getResourcesPaths(e);t.loadFavicon(n.favicon),t.loadStyle(n.envStyle),t.loadScript(n.envScript)}static createAndHideSimulationControlsDiv(){let e=document.createElement("div");e.id="external_simulation_controls_div",e.classList.add("center-aligned"),e.hidden=!0,t.createSimulationControls().forEach((t=>e.appendChild(t))),document.body.appendChild(e)}static createSimulationControls(){let e=[];return e.push(t.createSimulationControlButton("external_run_button","Run",["external_simulation_control_button"],(()=>console.log("This will run the simulation.")))),e.push(t.createSimulationControlButton("external_pause_button","Pause",["external_simulation_control_button"],(()=>console.log("This will pause the simulation.")))),e.push(t.createSimulationControlButton("external_resume_button","Resume",["external_simulation_control_button"],(()=>console.log("This will resume a paused simulation.")))),e.push(t.createSimulationControlButton("external_stop_button","Stop",["external_simulation_control_button"],(()=>console.log("This will stop the simulation.")))),e.push(t.createSimulationControlButton("external_reset_button","Reset",["external_simulation_control_button"],(()=>console.log("This will reset the simulation.")))),e.push(t.createSimulationControlButton("external_speed_button","Speed Up",["external_simulation_control_button"],(()=>console.log("This will increase the simulation speed.")))),e.push(t.createSimulationControlButton("external_save_button","Save",["external_simulation_control_button"],(()=>console.log("This will save the simulation state.")))),e.push(t.createSimulationControlButton("external_load_button","Load",["external_simulation_control_button"],(()=>console.log("This will load a new state for the simulation.")))),e.push(t.createSimulationControlButton("external_guide_button","Guide",["external_simulation_control_button"],(()=>console.log("This will open the relevant guide.")))),e}static createSimulationControlButton(t,e,n,o){let i=document.createElement("button");return i.id=t,i.innerText=e,i.classList.add(...n),i.hidden=!0,i.addEventListener("click",o),i}}window.addEventListener("DOMContentLoaded",(()=>t.main()))})();